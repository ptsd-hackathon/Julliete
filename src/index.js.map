{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,0CAAoB;AACpB,8CAAwB;AACxB,mDAAgD;AAChD,4EAAgE;AAChE,sFAA0E;AAC1E,8EAAkE;AAClE,wEAA4D;AAC5D,+CAA0C;AAC1C,uFAAmF;AACnF,0EAA8D;AAC9D,sEAA0D;AAEnD,IAAA,oDAAY,CAA6B;AAEhD,IAAM,SAAS,GAAG;IACd,KAAK,EAAE;QACH,aAAa,EAAE,gCAAU;QACzB,QAAQ,EAAE,4BAAQ;KACrB;IACD,QAAQ,EAAE;QACN,WAAW,EAAE,kCAAW;QACxB,YAAY,EAAE,oCAAY;QAC1B,gBAAgB,EAAE,4CAAgB;QAClC,SAAS,EAAE,8BAAS;KACvB;CACJ,CAAC;AAEF,IAAM,QAAQ,GAAG,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAAE,MAAM,CAAC,CAAC;AAElF,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,EAAC,QAAQ,UAAA,EAAE,SAAS,WAAA,EAAC,CAAC,CAAC;AAEvD,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAC,EAAsB;QAArB,YAAG;IACtB,IAAI,YAAY,GAAG,IAAI,2BAAY,EAAE,CAAC;IACtC,YAAY,CAAC,OAAO,EAAE,CAAC;IACvB,OAAO,CAAC,GAAG,CAAC,mCAAuB,GAAK,CAAC,CAAC;IAE1C,IAAI,eAAe,GAAG,IAAI,oDAAwB,EAAE,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACvC,2BAAW,CAAC,eAAe,EAAE;QACzB,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;YACR,OAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,GAAG,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport {DBConnection} from \"./dal/dbConnection\";\r\nimport {registerApp} from \"./bl/resolvers/registerApp.resolver\";\r\nimport {sendUserLocation} from \"./bl/resolvers/sendUserLocation.resolver\";\r\nimport {registerUser} from \"./bl/resolvers/registerUser.resolver\";\r\nimport {sendEvent} from \"./bl/resolvers/sendEvent.resolver\";\r\nimport {scheduleJob} from \"node-schedule\";\r\nimport {ClockIntegratorScheduler} from \"./bl/schedulers/clockIntegrator.scheduler\";\r\nimport {userEvents} from \"./bl/resolvers/userEvents.resolver\";\r\nimport {authUser} from './bl/resolvers/authUser.resolver';\r\n\r\nconst {ApolloServer} = require('apollo-server');\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        getUserEvents: userEvents,\r\n        authUser: authUser\r\n    },\r\n    Mutation: {\r\n        registerApp: registerApp,\r\n        registerUser: registerUser,\r\n        sendUserLocation: sendUserLocation,\r\n        sendEvent: sendEvent\r\n    },\r\n};\r\n\r\nconst typeDefs = fs.readFileSync(path.join(__dirname, \"schema.graphqls\"), \"utf8\");\r\n\r\nconst server = new ApolloServer({typeDefs, resolvers});\r\n\r\nserver.listen().then(({url}: { url: string }) => {\r\n    let dbConnection = new DBConnection();\r\n    dbConnection.connect();\r\n    console.log(`ðŸš€  Server ready at ${url}`);\r\n\r\n    let clockIntegrator = new ClockIntegratorScheduler();\r\n    console.log(\"Starting scheduler task\");\r\n    scheduleJob('*/5 * * * * *', function () {\r\n        clockIntegrator.execute().then(() => {\r\n            console.log(\"Updated active clocks information for all users\");\r\n        }).catch(err => {\r\n            console.log(\"Error updating clocks information \" + err);\r\n        });\r\n    });\r\n});"]}