{"version":3,"file":"sendEvent.resolver.js","sourceRoot":"","sources":["sendEvent.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6DAA2D;AAC3D,gGAA8F;AAI9F,SAAsB,SAAS,CAAC,IAAS,EAAE,EAG1C;QAH4C,wBAAS,EAAE,sBAAQ,EAAE,sBAAQ,EAAE,4CAAmB,EAAE,sCAAgB,EAAE,oBAAO;;;;;;oBAIlH,aAAa,GAAG,IAAI,8BAAa,EAAE,CAAC;oBACrB,qBAAM,0CAAmB,CAAC,eAAe,CAAC,mBAAmB,CAAC,GAAG,EAAE,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAA;;oBAArH,YAAY,GAAG,SAAsG;oBACzH,qBAAM,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,EAAE,EAAE,YAAY,CAAC,EAAA;;oBAAtH,SAAsH,CAAC;oBACvH,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAC/B,sBAAO,IAAI,EAAC;;;;CACf;AATD,8BASC","sourcesContent":["import { GQLLocationInput, GQLLogType } from \"../../../graphql-types\";\r\nimport { EventsService } from \"../services/events.service\";\r\nimport { LocationInformation } from \"../services/location/locationLogic/location-information\";\r\nimport { ClockIntegratorScheduler } from \"../schedulers/clockIntegrator.scheduler\";\r\n\r\n\r\nexport async function sendEvent(root: any, { userEmail, appToken, language, locationCoordinates, eventDescription, logType }: {\r\n    userEmail: string, appToken: string, language: string, locationCoordinates: GQLLocationInput, eventDescription: string,\r\n    logType: GQLLogType\r\n}): Promise<boolean> {\r\n    let eventsService = new EventsService();\r\n    let locationData = await LocationInformation.getLocationData(locationCoordinates.lat, locationCoordinates.long, language);\r\n    await eventsService.addNewEvent(userEmail, appToken, logType, eventDescription, locationCoordinates, [], locationData);\r\n    console.log(\"Saved new event\");\r\n    return true;\r\n}"]}