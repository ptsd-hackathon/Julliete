{"version":3,"file":"places-near-by.js","sourceRoot":"","sources":["places-near-by.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0DAAkC;AAElC;IAAA;IA2CA,CAAC;IA1CU,iCAAoB,GAA3B,UAA4B,MAAW;QACnC,IAAI,MAAM,GAAkB,EAAE,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAM;YAC/B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;gBACR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,IAAS,EAAE,GAAQ;YAC9C,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAEY,kCAAqB,GAAlC,UAAmC,MAAW,EAAE,MAAc;;;;;4BAC/C,qBAAM,YAAY,CAAC,iBAAiB,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI,IAAE,OAAA,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAxC,CAAwC,CAAC,EAAA;;wBAA/G,IAAI,GAAG,SAAwG;wBAC5G,qBAAM,IAAI,EAAA;4BAAjB,sBAAO,SAAU,EAAC;;;;KACrB;IACoB,8BAAiB,GAAtC,UAAuC,MAAU,EAAE,MAAa;;;;;;;wBACxD,eAAe,GAAkB,EAAE,CAAC;wBACpC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;wBAClB,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;wBACpB,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAC5B,qBAAM,OAAO,CAAC,GAAG,CAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAO,CAAK;;;;;iDAC1C,CAAC,CAAC,aAAa,EAAf,wBAAe;iDACX,CAAC,CAAC,aAAa,CAAC,QAAQ,EAAxB,wBAAwB;4CACb,qBAAM,oBAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAA;;4CAA1C,IAAI,GAAG,SAAmC;iDAC1C,IAAI,EAAJ,wBAAI;iDACA,CAAA,IAAI,CAAC,MAAM,IAAI,IAAI,CAAA,EAAnB,wBAAmB;4CACnB,qBAAM,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAA;;4CAAjG,SAAiG,CAAC;;gDAChG,qBAAM,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAA;;4CAA9B,SAA8B,CAAA;;;;;iCAInD,CAAC,CAAC,EAAA;;wBAXH,SAWG,CAAC;wBACG,qBAAM,eAAe,EAAA;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAChC;IACc,kCAAqB,GAApC,UAAqC,eAA8B;QAC/D,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC,CAAA;SAC5B;QACD,OAAO,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC;IACxC,CAAC;IACL,mBAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,oCAAY","sourcesContent":["import busyHours from 'busy-hours'\r\n\r\nexport class PlacesNearBy {\r\n    static getNearByPlacesNames(result: any): Array<string> {\r\n        let places: Array<string> = [];\r\n        result.results.map(function (x: any) {\r\n            x.types.map(function () {\r\n                places.push(x.name);\r\n            });\r\n        });\r\n        return places.filter(function (item: any, pos: any) {\r\n            return places.indexOf(item) == pos;\r\n        });\r\n    }\r\n\r\n    static async getSeverityOfLocation(result: any, apiKey: string): Promise<number> {\r\n        let data = await PlacesNearBy.getBusyStatistics(result,apiKey).then(data=>PlacesNearBy.getAveregeCrowdedness(data));\r\n        return await data;\r\n    }\r\n    private static async getBusyStatistics(result:any, apiKey:string): Promise<Array<number>>{\r\n        let busyPlacesArray: Array<number> = [];\r\n        let date = new Date();\r\n        let day = date.getDay();\r\n        let hours = date.getHours();\r\n        await Promise.all( result.results.map(async (x:any) => {\r\n            if (x.opening_hours) {\r\n                if (x.opening_hours.open_now) {\r\n                    let data = await busyHours(x.place_id, apiKey);\r\n                    if (data) {\r\n                        if (data.status == \"ok\") {\r\n                            await busyPlacesArray.push(data.week[day].hours[hours - data.week[day].hours[0].hour].percentage);\r\n                        }else await busyPlacesArray.push(20)\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        return await busyPlacesArray;\r\n    }\r\n    private static getAveregeCrowdedness(busyPlacesArray: Array<number>): number {\r\n        let sum = 0;\r\n        for (let i = 0; i < busyPlacesArray.length; i++) {\r\n            sum += busyPlacesArray[i]\r\n        }\r\n        return sum / busyPlacesArray.length;\r\n    }\r\n}\r\n\r\n"]}