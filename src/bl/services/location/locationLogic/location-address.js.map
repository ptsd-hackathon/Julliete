{"version":3,"file":"location-address.js","sourceRoot":"","sources":["location-address.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA+C;AAE/C;IAAA;IAWA,CAAC;IAVgB,0BAAU,GAAvB,UAAwB,MAAc,EAAE,GAAW,EAAE,GAAW,EAAE,QAAgB;;;;;;wBAC1E,aAAa,GAAG,8DAA4D,GAAG,SAAI,GAAG,aAAQ,MAAM,kBAAa,QAAU,CAAC;wBAC/G,qBAAM,8BAAa,CAAC,OAAO,CAAC,aAAa,CAAC,EAAA;;wBAAvD,MAAM,GAAO,SAA0C;wBAC3D,IAAI,MAAM,CAAC,OAAO,EAAC;4BACf,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gCACnB,sBAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAC;6BAC9C;yBACJ;wBACD,sBAAO,EAAE,EAAA;;;;KACZ;IACL,sBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,0CAAe","sourcesContent":["import {LocationUtils} from \"./location-utils\";\r\n\r\nexport class LocationAddress {\r\n    static async getAddress(apiKey: string, lat: number, lng: number, language: string): Promise<string> {\r\n        let requestString = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}&language=${language}`;\r\n        let result:any = await LocationUtils.httpGet(requestString);\r\n        if (result.results){\r\n            if (result.results[0]) {\r\n                return result.results[0].formatted_address;\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n}"]}