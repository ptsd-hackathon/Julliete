{"version":3,"file":"location-information.js","sourceRoot":"","sources":["location-information.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAC9C,uDAAmD;AACnD,qCAAkC;AAClC,mDAA+C;AAE/C;IAAA;IAYA,CAAC;IAXgB,mCAAe,GAA5B,UAA6B,GAAW,EAAE,GAAW,EAAE,QAAe;;;;;;wBAC9D,MAAM,GAAG,yCAAyC,CAAC;wBACnD,mBAAmB,GAAG,2EAAyE,GAAG,SAAI,GAAG,gBAAW,GAAG,aAAQ,MAAM,kBAAa,QAAU,CAAC;wBACxI,qBAAM,8BAAa,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAA;;wBAArE,kBAAkB,GAAG,SAAgD;;wBAE5D,qBAAM,kCAAe,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAA;;wBAArE,UAAO,GAAE,SAA4D;wBACxD,qBAAM,6BAAY,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,MAAM,CAAC,EAAA;;wBAAjF,cAAW,GAAE,SAAoE;wBAC/D,qBAAM,6BAAY,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,EAAA;;wBAA7E,mBAAgB,GAAE,SAA2D;wBACpE,qBAAM,iBAAO,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAA;4BAJrD,sBAIH,UAAO,GAAE,SAA+C;iCAC3D;4BALD,sBAAO,SAKN,EAAA;;;;KACJ;IACL,0BAAC;AAAD,CAAC,AAZD,IAYC;AAZY,kDAAmB","sourcesContent":["import {PlacesNearBy} from \"./places-near-by\";\r\nimport {LocationAddress} from \"./location-address\";\r\nimport {weather} from \"./weather\";\r\nimport {LocationUtils} from \"./location-utils\";\r\n\r\nexport class LocationInformation {\r\n    static async getLocationData(lat: number, lng: number, language:string): Promise<LocationData> {\r\n        let apiKey = 'AIzaSyAxm42yuheNNx0znh7x4qAExlu5MMsnpPY';\r\n        let requestNearByPlaces = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lng}&radius=${100}&key=${apiKey}&language=${language}`;\r\n        let resultNearByPlaces = await LocationUtils.httpGet(requestNearByPlaces);\r\n        return await {\r\n            address: await LocationAddress.getAddress(apiKey, lat, lng, language),\r\n            crowdedness: await PlacesNearBy.getSeverityOfLocation(resultNearByPlaces, apiKey),\r\n            pointsOfInterest: await PlacesNearBy.getNearByPlacesNames(resultNearByPlaces),\r\n            weather: await weather.handleWeather(lng, lat, language)\r\n        }\r\n    }\r\n}\r\n\r\n"]}