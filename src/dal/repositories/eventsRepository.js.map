{"version":3,"file":"eventsRepository.js","sourceRoot":"","sources":["eventsRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAA8C;AAE9C;IAAA;IAWA,CAAC;IAVgB,+BAAI,GAAjB,UAAkB,KAAc;;;gBAC5B,sBAAO,IAAI,aAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAC;;;KAClC;IAEY,kEAAuC,GAApD,UAAqD,SAAiB,EAAE,QAAgB,EAAE,QAAc,EAAE,MAAY;;;gBAClH,sBAAO,aAAK,CAAC,IAAI,CAAC;wBACd,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;wBACxC,SAAS,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAC;qBAC/C,CAAC,EAAC;;;KACN;IACL,uBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,4CAAgB","sourcesContent":["import {Event, EventDB} from \"../types/event\";\r\n\r\nexport class EventsRepository {\r\n    public async save(event: EventDB) {\r\n        return new Event(event).save();\r\n    }\r\n\r\n    public async findAllByUserAndAppTokenAndBetweenDates(userEmail: string, appToken: string, fromDate: Date, toDate: Date) {\r\n        return Event.find({\r\n            userEmail: userEmail, appToken: appToken,\r\n            timestamp: {\"$gte\": fromDate, \"$lt\": toDate}\r\n        });\r\n    }\r\n}"]}