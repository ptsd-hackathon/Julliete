{"version":3,"file":"user.js","sourceRoot":"","sources":["user.ts"],"names":[],"mappings":";;AACA,qCAAuC;AAevC,IAAM,UAAU,GAAW,IAAI,iBAAM,CAAC;IAClC,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,MAAM;IAChB,WAAW,EAAE,MAAM;IACnB,QAAQ,EAAE;QACN,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,IAAI;QACjB,OAAO,EAAE;YACL,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,MAAM;SACpB;QACD,kBAAkB,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;KACzC;CACJ,CAAC,CAAC;AAEU,QAAA,IAAI,GAAG,gBAAK,CAAS,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import * as mongoose from \"mongoose\";\r\nimport {model, Schema} from \"mongoose\";\r\n\r\nexport interface UserDB extends mongoose.Document {\r\n    email: string,\r\n    appToken: string,\r\n    clockSerial: string,\r\n    metadata: {\r\n        fullName: string | undefined,\r\n        gender: string | undefined,\r\n        dateOfBirth: Date,\r\n        address: { state: string, city: string, street: string, apartment: string } | undefined,\r\n        medicalInformation: any\r\n    }\r\n}\r\n\r\nconst UserSchema: Schema = new Schema({\r\n    email: String,\r\n    appToken: String,\r\n    clockSerial: String,\r\n    metadata: {\r\n        fullName: String,\r\n        gender: String,\r\n        dateOfBirth: Date,\r\n        address: {\r\n            state: String,\r\n            city: String,\r\n            street: String,\r\n            apartment: String\r\n        },\r\n        medicalInformation: Schema.Types.Mixed\r\n    }\r\n});\r\n\r\nexport const User = model<UserDB>(\"User\", UserSchema);"]}